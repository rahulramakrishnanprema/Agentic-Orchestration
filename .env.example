# Aristotle-I Configuration - Environment Variables Template
# Copy this file to .env and fill in your actual values
# DO NOT commit .env file to version control

# =============================================================================
# CORE CONFIGURATION
# =============================================================================
# Maximum number of rebuild attempts for failed code generation
MAX_REBUILD_ATTEMPTS=3

# Minimum quality score threshold for review (0.0 to 1.0)
# Code must meet this threshold to be approved
REVIEW_THRESHOLD=0.75

# Graph of Thought (GOT) minimum score for task planning (0.0 to 1.0)
GOT_SCORE_THRESHOLD=0.70

# Human-in-the-loop timeout in seconds
# Time to wait for user approval before timeout
HITL_TIMEOUT_SECONDS=300

# =============================================================================
# LLM CONFIGURATION
# =============================================================================
# Planner Agent - responsible for task decomposition using GOT methodology
PLANNER_LLM_MODEL=gpt-4
PLANNER_LLM_KEY=sk-...
PLANNER_LLM_URL=https://api.openai.com/v1
PLANNER_LLM_TEMPERATURE=0.3
PLANNER_LLM_MAX_TOKENS=

# Developer Agent - responsible for code generation
DEVELOPER_LLM_MODEL=gpt-4
DEVELOPER_LLM_KEY=sk-...
DEVELOPER_LLM_URL=https://api.openai.com/v1
DEVELOPER_LLM_TEMPERATURE=0.3
DEVELOPER_LLM_MAX_TOKENS=

# Reviewer Agent - responsible for code quality review
REVIEWER_LLM_MODEL=gpt-4
REVIEWER_LLM_KEY=sk-...
REVIEWER_LLM_URL=https://api.openai.com/v1
REVIEWER_LLM_TEMPERATURE=0.3
REVIEWER_LLM_MAX_TOKENS=

# Assembler Agent - responsible for deployment and documentation
ASSEMBLER_LLM_MODEL=gpt-4
ASSEMBLER_LLM_KEY=sk-...
ASSEMBLER_LLM_URL=https://api.openai.com/v1
ASSEMBLER_LLM_TEMPERATURE=0.3
ASSEMBLER_LLM_MAX_TOKENS=

# Global LLM fallback (optional - used if agent-specific keys not provided)
LLM_API_KEY=sk-...
LLM_API_URL=https://api.openai.com/v1

# =============================================================================
# UI CONFIGURATION
# =============================================================================
# Host binding for HTTP server (use 0.0.0.0 for all interfaces)
UI_HOST=0.0.0.0

# Port for HTTP server serving React frontend and Python backend APIs
UI_PORT=8080

# Port for React development server (only used in development)
REACT_DEV_PORT=5173

# Enable debug mode (true/false)
DEBUG=false

# Logging level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# =============================================================================
# GITHUB CONFIGURATION
# =============================================================================
# GitHub personal access token (must have repo and workflow permissions)
# Generate at: https://github.com/settings/tokens
GITHUB_TOKEN=ghp_...

# GitHub repository owner (username or organization)
GITHUB_REPO_OWNER=

# GitHub repository name
GITHUB_REPO_NAME=

# =============================================================================
# JIRA CONFIGURATION
# =============================================================================
# Jira instance URL (e.g., https://your-company.atlassian.net)
JIRA_SERVER=https://your-instance.atlassian.net

# Jira user email
JIRA_EMAIL=your-email@company.com

# Jira API token
# Generate at: https://id.atlassian.com/manage-profile/security/api-tokens
JIRA_TOKEN=

# Jira project key (e.g., PROJ, ABC, etc.)
PROJECT_KEY=

# =============================================================================
# SONARQUBE CONFIGURATION
# =============================================================================
# SonarQube server URL
SONAR_HOST_URL=https://your-sonarqube-instance.com

# SonarQube authentication token
# Generate in SonarQube administration panel
SONAR_TOKEN=

# SonarQube organization
SONAR_ORG=

# SonarQube project key
SONAR_PROJECT_KEY=

# =============================================================================
# MONGODB CONFIGURATION
# =============================================================================
# MongoDB connection string
# Examples:
#   Local: mongodb://localhost:27017/aristotlei
#   Atlas: mongodb+srv://user:pass@cluster.mongodb.net/aristotlei?retryWrites=true&w=majority
MONGODB_CONNECTION_STRING=mongodb+srv://user:pass@cluster.mongodb.net/aristotlei?retryWrites=true&w=majority

# Primary database name
MONGODB_DATABASE=aristotlei

# Enable/disable MongoDB integration
MONGODB_ENABLED=true

# Collection names for performance tracking
MONGODB_COLLECTION_MATRIX=performance_matrix
MONGODB_PERFORMANCE_DATABASE=performance_db
MONGODB_AGENT_PERFORMANCE=agent_perf
MONGODB_REVIEWER_COLLECTION=reviewer_results

# Feedback database and collections
MONGODB_FEEDBACK_DATABASE=feedback_db
DEVELOPER_AGENT_FEEDBACK=dev_feedback
ASSEMBLER_FEEDBACK=assembler_feedback

# =============================================================================
# OTHER CONFIGURATION
# =============================================================================
# Branch name for code reviews
REVIEW_BRANCH_NAME=ai-review

# Path to coding standards folder
STANDARDS_FOLDER=./standards

