stages:
  - build
  - deploy
  - verify

variables:
  DOCKER_DRIVER: overlay2
  IMAGE_NAME: "aristotlei"
  SERVICE_NAME: "aristotlei"

build:
  stage: build
  image: google/cloud-sdk:alpine
  services:
    - docker:24.0.5-dind
  before_script:
    - apk add --no-cache docker-cli
    - echo $GCP_SERVICE_ACCOUNT_KEY > ${HOME}/gcp-key.json
    - gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
    - gcloud config set project $GCP_PROJECT_ID
    - gcloud auth configure-docker ${GCP_REGION}-docker.pkg.dev --quiet
  script:
    - export IMAGE_TAG="${GCP_REGION}-docker.pkg.dev/${GCP_PROJECT_ID}/${IMAGE_NAME}/${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}"
    - export IMAGE_LATEST="${GCP_REGION}-docker.pkg.dev/${GCP_PROJECT_ID}/${IMAGE_NAME}/${IMAGE_NAME}:latest"
    - docker build -f deployment/Dockerfile -t $IMAGE_TAG -t $IMAGE_LATEST .
    - docker push $IMAGE_TAG
    - docker push $IMAGE_LATEST
  only:
    - main
    - develop

deploy:production:
  stage: deploy
  image: google/cloud-sdk:alpine
  before_script:
    - echo $GCP_SERVICE_ACCOUNT_KEY > ${HOME}/gcp-key.json
    - gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
    - gcloud config set project $GCP_PROJECT_ID
  script:
    - export IMAGE_TAG="${GCP_REGION}-docker.pkg.dev/${GCP_PROJECT_ID}/${IMAGE_NAME}/${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}"
    - |
      gcloud run deploy ${SERVICE_NAME} \
        --image=${IMAGE_TAG} \
        --platform=managed \
        --region=${GCP_REGION} \
        --port=8080 \
        --memory=4Gi \
        --cpu=2 \
        --timeout=3600 \
        --allow-unauthenticated \
        --set-env-vars="UI_HOST=0.0.0.0,UI_PORT=8080,DEBUG=false,LOG_LEVEL=INFO" \
        --set-env-vars="MONGODB_CONNECTION_STRING=${MONGODB_CONNECTION_STRING},MONGODB_DATABASE=aristotlei" \
        --set-env-vars="GITHUB_TOKEN=${GITHUB_TOKEN},GITHUB_REPO_OWNER=${GITHUB_REPO_OWNER},GITHUB_REPO_NAME=${GITHUB_REPO_NAME}" \
        --set-env-vars="PLANNER_LLM_KEY=${PLANNER_LLM_KEY},DEVELOPER_LLM_KEY=${DEVELOPER_LLM_KEY},REVIEWER_LLM_KEY=${REVIEWER_LLM_KEY},ASSEMBLER_LLM_KEY=${ASSEMBLER_LLM_KEY}" \
        --set-env-vars="JIRA_SERVER=${JIRA_SERVER},JIRA_EMAIL=${JIRA_EMAIL},JIRA_TOKEN=${JIRA_TOKEN},PROJECT_KEY=${PROJECT_KEY}" \
        --min-instances=1 \
        --max-instances=10 \
        --labels=app=aristotlei
  environment:
    name: production
  only:
    - main

verify:production:
  stage: verify
  image: curlimages/curl:latest
  script:
    - echo "Verifying deployment"
    - sleep 20
  environment:
    name: production
  only:
    - main

